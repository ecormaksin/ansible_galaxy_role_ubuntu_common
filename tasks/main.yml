---
# tasks file for ansible_galaxy_role_ubuntu_common

- name: "common: apt | update packages"
  become: true
  ansible.builtin.apt:
    update_cache: yes

- name: "common: apt | upgrade packages"
  become: true
  ansible.builtin.apt:
    upgrade: dist

- name: "common: apt | autoremove packages"
  become: true
  ansible.builtin.apt:
    autoremove: yes

- name: "common: vim | install package"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.apt:
    update_cache: yes
    name: vim
    state: present
    autoremove: yes

- name: "common: vim | call vim instead of vi"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      cat "{{ etc.profile.file.path }}" | grep "alias vi='vim'" >/dev/null
      if [ $? -eq 0 ]; then
        echo "already changed."
      else
        echo "" >> "{{ etc.profile.file.path }}"
        echo "alias vi='vim'" >> "{{ etc.profile.file.path }}"
        . "{{ etc.profile.file.path }}"
      fi

- name: "common: vim | copy file to customise vim settings"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.copy:
    src: vimrc
    dest: "{{ vim.rc_ext.dist.file.path }}"

- name: "common: ntp | change timesyncd.conf"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.shell:
    cmd: |
      cat "{{ timesyncd.file.path }}" | grep "NTP={{ ntp.server }}" >/dev/null
      if [ $? -eq 0 ]; then
        echo "already changed."
      else
        sed -i -e "s/#NTP=/NTP={{ ntp.server }}/g" "{{ timesyncd.file.path }}"
      fi

- name: "common: ntp | restart systemd-timesyncd"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.systemd:
    name: systemd-timesyncd
    state: restarted

- name: "common: timezone | Set timezone"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  community.general.timezone:
    name: "{{ timezone.name }}"

- name: "common: locale | Install package"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.apt:
    name: language-pack-ja
    update_cache: yes

- name: "common: locale | Check locale"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.command: cat /etc/default/locale
  register: cat_locale_result

- name: "common: locale | Set locale japanese"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.command: update-locale LANG=ja_JP.UTF-8
  when: cat_locale_result.stdout != 'LANG=ja_JP.UTF-8'

- name: "common: tmux | install packages"
  become: true
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.apt:
    pkg:
      - tmux
      - xsel
      - iptables
      - iptables-persistent
    update_cache: yes

- name: "common: tmux | copy setting file"
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.copy:
    src: .tmux.conf
    dest: "~/.tmux.conf"
